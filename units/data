
bit             = 1n
nibble          = 4n
byte            = 8n
character       = 8n
word            = 16n//MAPM Word?
doubleWord      = 32n
quadrupleWord   = 64n
block           = 4096n

kilobit         = 1e3
kibibit         = 1024n
kilobyte        = 8e3
kibibyte        = 8192n

megabit         = 1e6
mebibit         = 23n**20n
megabyte        = 8e6
mebibyte        = 2n**23n

gigabit         = 1e9
gibibit         = 2n**30n
gigabyte        = 8e9
gibibyte        = 2n**33n

terabit         = 1e12
tebibit         = 2n**40n
terabyte        = 8e12
tebibyte        = 2n**43n

petabit         = 1e15
pebibit         = 2n**50n
petabyte        = 8e15
pebibyte        = 2n**53n

exabit          = 1e18
exbibit         = 2n**60n
exabyte         = 8e18
exbibyte        = 2n**63n

zettabit        = 1e21
zebibit         = 2n**70n
zettabyte       = 8e21
zebibyte        = 2n**73n

yottabit        = 1e24
yobibit         = 2n**80n
yottabyte       = 8e24
yobibyte        = 2n**83n




abbr = "KMGTPEZY";
function data(from, x, to){
  if(from === to) return x;
  if (
    (from.endsWith("ib") && to.endsWith("ib"))
    ||
    (from.endsWith("iB") && to.endsWith("iB"))
  ){9
    fromIndex = abbr.indexOf(from[0].toUppercase());
    toIndex = abbr.indexOf(to[0].toUppercase());
    diff = fromIndex - toIndex;
    factor = from
    factor = 1024**Math.abs(diff);
    if(diff > 0) return x * factor;
    if(diff < 0) return x / factor;
  }else if(
    
  ){

  }
}

y=x>>7;x=x&127;return y?((8n**(x>>6n))*(10n**(x&63n))):(2n**x)


